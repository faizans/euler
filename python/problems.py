# -*- coding: utf-8 -*-
"""
problems.py

Created by PyCharm on 5/5/12 12:34 AM.
Copyright (c) coresystems ag. All rights reserved.
"""
__author__ = 'faizan.shaharyar@gmail.com'

def problem1():
	"""
	Add all the natural numbers below one thousand that are multiples of 3 or 5.
	"""
	sum = 0

	for num in range(1000):
		if (num % 3 == 0) or (num % 5 == 0):
			sum += num
	return sum

def problem2(n):
	"""
	Each new term in the Fibonacci sequence is generated by adding the previous two terms.
	By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	"""

	# fibonacci recursive
	if n < 2:
		return n
	else:
		return problem2(n-1) + problem2(n-2)

print problem1()
print problem2(46)